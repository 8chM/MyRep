blueprint:
  name: Thermostat-Präsenz
  description: >
    Dieses Blueprint passt die Temperatur des Thermostats entsprechend der Anwesenheit des Benutzers an und berücksichtigt dabei die eingestellten Zeiten.
  domain: automation
  input:
    presence_entity:
      name: Anwesenheits-Entity
      description: Die Entity-ID der Anwesenheit
      selector:
        entity:
          domain: device_tracker
    thermostat_entity:
      name: Thermostat-Entity
      description: Die Entity-ID des Thermostats
      selector:
        entity:
          domain: climate
    input_boolean:
      name: Prüfung auf Anwesenheit
      description: Eine Input-Boolean-Entität, die zur Überprüfung der Anwesenheit verwendet wird.
      selector:
        entity:
          domain: input_boolean
    temp_day:
      name: Tagtemperatur
      description: Die Temperatur, auf die der Thermostat bei Anwesenheit während des Tages eingestellt werden soll.
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
    temp_night:
      name: Nachtemperatur
      description: Die Temperatur, auf die der Thermostat bei Abwesenheit während der Nacht eingestellt werden soll.
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
  trigger:
    platform: time
    at:
    - input_datetime.thermostat_time_1
    - input_datetime.thermostat_time_2
    - input_datetime.thermostat_time_3
    - input_datetime.thermostat_time_4
  condition:
  - condition: state
    entity_id: "{{ input_boolean.presence_check }}"
    state: "on"
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: "{{ presence_entity }}"
        state: "home"
      sequence:
      - service: climate.set_temperature
        data:
          entity_id: "{{ thermostat_entity }}"
          temperature: "{{ temp_day }}"
    - conditions:
      - condition: state
        entity_id: "{{ presence_entity }}"
        state: "not_home"
      sequence:
      - service: climate.set_temperature
        data:
          entity_id: "{{ thermostat_entity }}"
          temperature: "{{ temp_night }}"
  mode: single
  max_exceeded: silent
