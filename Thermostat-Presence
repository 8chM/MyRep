blueprint:
  name: Thermostat-Automatisierung
  description: Eine Automatisierung, die das Thermostat abhängig von der Anwesenheit und Zeit einstellt.
  domain: automation
  input:
    presence_entity:
      name: Anwesenheit
      description: "Die Entity des Geräts, das den Anwesenheitsstatus des Benutzers darstellt."
      selector:
        entity:
          domain: device_tracker
    thermostat_entity:
      name: Thermostat
      description: "Die Entity des Thermostats, das gesteuert werden soll."
      selector:
        entity:
          domain: climate
    anwesenheit_1:
      name: Anwesenheit Zeitraum 1
      description: "Die Startzeit des Zeitraums, in dem jemand anwesend ist."
      selector:
        time: {}
    anwesenheit_2:
      name: Anwesenheit Zeitraum 2
      description: "Die Startzeit des Zeitraums, in dem jemand anwesend ist."
      selector:
        time: {}
    anwesenheit_temp_1:
      name: Temperatur im Zeitraum 1
      description: "Die gewünschte Temperatur während des ersten Anwesenheitszeitraums."
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: "°C"
    anwesenheit_temp_2:
      name: Temperatur im Zeitraum 2
      description: "Die gewünschte Temperatur während des zweiten Anwesenheitszeitraums."
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: "°C"
    abwesenheit_temp:
      name: Temperatur bei Abwesenheit
      description: "Die gewünschte Temperatur, wenn niemand zu Hause ist."
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: "°C"
  trigger:
    platform: state
    entity_id: !input presence_entity
    to: 'home'
  condition:
    condition: state
    entity_id: !input presence_entity
    state: 'home'
  action:
  - choose:
    - conditions:
      - condition: time
        after: !input anwesenheit_1
        before: !input anwesenheit_2
      sequence:
      - service: climate.set_temperature
        target: !input thermostat_entity
        data:
          temperature: !input anwesenheit_temp_1
    - conditions:
      - condition: time
        after: !input anwesenheit_2
      sequence:
      - service: climate.set_temperature
        target: !input thermostat_entity
        data:
          temperature: !input anwesenheit_temp_2
    default:
    - service: climate.set_temperature
      target: !input thermostat_entity
      data:
        temperature: !input abwesenheit_temp
