blueprint:
  name: Thermostat Zeitplan
  description: Eine Automatisierung, um das Thermostat zu bestimmten Zeiten anzupassen.

  domain: automation
  input:
    thermostat_entity:
      name: Thermostat Entity
      description: Die Entity-ID des Thermostats
      selector:
        entity:
          domain: climate
    temp_day:
      name: Tagtemperatur
      description: Die Temperatur, auf die das Thermostat während des Tages eingestellt wird
      selector:
        number:
          min: 5
          max: 40
          step: 0.1
          unit_of_measurement: "°C"
    temp_night:
      name: Nachttemperatur
      description: Die Temperatur, auf die das Thermostat während der Nacht eingestellt wird
      selector:
        number:
          min: 5
          max: 40
          step: 0.1
          unit_of_measurement: "°C"
    presence_entity:
      name: Anwesenheits-Entity
      description: Die Entity-ID der Entität, die überprüft wird, ob jemand zu Hause ist
      selector:
        entity:
          domain: device_tracker
    presence_check:
      name: Anwesenheitsprüfung aktivieren
      description: Soll die Anwesenheitsüberprüfung aktiviert werden?
      default: false
      selector:
        boolean: {}
    min_temp:
      name: Mindesttemperatur
      description: Die Mindesttemperatur, auf die das Thermostat eingestellt wird, wenn niemand zu Hause ist.
      default: 15
      selector:
        number:
          min: 5
          max: 40
          step: 0.1
          unit_of_measurement: "°C"
    time_1:
      name: Zeit 1
      description: Die erste Zeit, zu der das Thermostat eingestellt wird
      selector:
        time: {}
    time_2:
      name: Zeit 2
      description: Die zweite Zeit, zu der das Thermostat eingestellt wird
      selector:
        time: {}
    time_3:
      name: Zeit 3
      description: Die dritte Zeit, zu der das Thermostat eingestellt wird
      selector:
        time: {}
    time_4:
      name: Zeit 4
      description: Die vierte Zeit, zu der das Thermostat eingestellt wird
      selector:
        time: {}

  mode: restart
  max_exceeded: silent

  trigger:
    platform: time
    at:
    - input_datetime.thermostat_time_1
    - input_datetime.thermostat_time_2
    - input_datetime.thermostat_time_3
    - input_datetime.thermostat_time_4

  condition:
  - condition: state
    entity_id: "{{ input_boolean.presence_check }}"
    state: "on"

  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: "{{ presence_entity }}"
        state: "home"
      sequence:
      - service: climate.set_temperature
        data:
          entity_id: "{{ thermostat_entity }}"
          temperature: "{{ temp_day }}"
    - conditions:
      - condition: state
        entity_id: "{{ presence_entity }}"
        state: "not_home"
      sequence:
      - service: climate.set
