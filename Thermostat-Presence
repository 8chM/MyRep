blueprint:
  name: Thermostat-Steuerung
  description: |
    Eine Thermostat-Steuerung mit individuell wählbaren Zeiten und automatischer Anwesenheitserkennung.
  
  input:
    thermostat_entity:
      name: Thermostat-Entity
      description: Die Entity-ID des zu steuernden Thermostats.
      selector:
        entity:
          domain: climate
    anwesenheit_entity:
      name: Anwesenheits-Entity
      description: Die Entity-ID des Anwesenheitssensors.
      selector:
        entity:
          domain: device_tracker
    temperatur_1:
      name: Temperatur 1
      description: Die gewünschte Temperatur bei Zeiten 1.
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    zeit_1:
      name: Zeit 1
      description: Die Zeit, zu der Temperatur 1 eingestellt werden soll.
      selector:
        text: {}
    temperatur_2:
      name: Temperatur 2
      description: Die gewünschte Temperatur bei Zeiten 2.
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    zeit_2:
      name: Zeit 2
      description: Die Zeit, zu der Temperatur 2 eingestellt werden soll.
      selector:
        text: {}
    temperatur_3:
      name: Temperatur 3
      description: Die gewünschte Temperatur bei Zeiten 3.
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    zeit_3:
      name: Zeit 3
      description: Die Zeit, zu der Temperatur 3 eingestellt werden soll.
      selector:
        text: {}
    temperatur_4:
      name: Temperatur 4
      description: Die gewünschte Temperatur bei Zeiten 4.
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
          unit_of_measurement: "°C"
    zeit_4:
      name: Zeit 4
      description: Die Zeit, zu der Temperatur 4 eingestellt werden soll.
      selector:
        text: {}

  # Aktionen, die bei Ausführung der Automation ausgeführt werden
  action:
    # Wähle die Temperatur basierend auf der aktuellen Anwesenheit
    - choose:
        # Wenn Abwesenheit erkannt wird, setze die Abwesenheitstemperatur
        - conditions: "{{ is_state(anwesenheit_entity, 'not_home') }}"
          sequence:
            - service: climate.set_temperature
              target:
                entity_id: "{{ thermostat_entity }}"
              data:
                temperature: "{{ temperatur_abwesenheit }}"
        # Ansonsten setze die entsprechende Temperatur anhand der aktuellen Uhrzeit
        - conditions: 
            - condition: time
