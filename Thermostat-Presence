blueprint:
  name: Thermostat Steuerung
  description: Eine Automatisierung, um die Temperatur des Thermostats basierend auf Zeiten und Anwesenheit zu steuern.
  domain: automation
  input:
    thermostat_entity:
      name: Thermostat Entity ID
      description: Die Entity ID des Thermostats, der gesteuert werden soll.
      selector:
        entity:
          domain: climate
    input_boolean:
      name: Input Boolean zur Anwesenheitsüberprüfung
      description: Input Boolean, der aktiviert wird, wenn Anwesenheit erkannt wird.
      selector:
        entity:
          domain: input_boolean
    presence_entity:
      name: Anwesenheits-Entity
      description: Die Entity ID der Entität, die zur Anwesenheitsüberprüfung verwendet werden soll.
      selector:
        entity:
          domain: device_tracker
    temp_day:
      name: Temperatur Tag
      description: Die gewünschte Temperatur während des Tages.
      selector:
        number:
          min: 0
          max: 40
          step: 0.1
          unit_of_measurement: "°C"
    temp_night:
      name: Temperatur Nacht
      description: Die gewünschte Temperatur während der Nacht.
      selector:
        number:
          min: 0
          max: 40
          step: 0.1
          unit_of_measurement: "°C"
    temp_away:
      name: Mindest-Temperatur bei Abwesenheit
      description: Die gewünschte Temperatur, wenn keine Anwesenheit erkannt wird.
      selector:
        number:
          min: 0
          max: 40
          step: 0.1
          unit_of_measurement: "°C"
  trigger:
    - platform: time
      at:
        - input_datetime.thermostat_time_morning
        - input_datetime.thermostat_time_day
        - input_datetime.thermostat_time_evening
        - input_datetime.thermostat_time_night
  condition:
    - condition: state
      entity_id: "{{ input_boolean.presence_check }}"
      state: "on"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: "{{ presence_entity }}"
              state: "home"
          sequence:
            - service: climate.set_temperature
              data:
                entity_id: "{{ thermostat_entity }}"
                temperature: "{{ temp_day }}"
        - conditions:
            - condition: state
              entity_id: "{{ presence_entity }}"
              state: "not_home"
          sequence:
            - service: climate.set_temperature
              data:
                entity_id: "{{ thermostat_entity }}"
                temperature: "{{ temp_away }}"
  mode: single
