blueprint:
  name: Thermostat-Steuerung
  description: Eine Automation, um das Thermostat basierend auf Anwesenheit und Zeit zu steuern.
  domain: automation
  input:
    anwesenheitstracker:
      name: Anwesenheitstracker
      description: Die Entity-ID des Anwesenheitstrackers.
      selector:
        entity:
          domain: device_tracker

    climate_entity_id:
      name: Thermostat-Entity
      description: Die Entity-ID des zu steuernden Thermostats.
      selector:
        entity:
          domain: climate

    temperatur_zeit1:
      name: Temperaturzeit 1
      description: Die erste Zeit, zu der die Temperatur geändert werden soll.
      selector:
        time:

    temperatur_zeit2:
      name: Temperaturzeit 2
      description: Die zweite Zeit, zu der die Temperatur geändert werden soll.
      selector:
        time:

    temperatur_zeit3:
      name: Temperaturzeit 3
      description: Die dritte Zeit, zu der die Temperatur geändert werden soll.
      selector:
        time:

    temperatur_zeit4:
      name: Temperaturzeit 4
      description: Die vierte Zeit, zu der die Temperatur geändert werden soll.
      selector:
        time:

    temperatur_anwesenheit:
      name: Temperatur bei Anwesenheit
      description: Die Temperatur, die bei Anwesenheit zu den festgelegten Zeitpunkten gesetzt werden soll.
      selector:
        number:
          min: 0
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

    temperatur_abwesenheit:
      name: Temperatur bei Abwesenheit
      description: Die Temperatur, die bei Abwesenheit gesetzt werden soll.
      selector:
        number:
          min: 0
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

  trigger:
    platform: state
    entity_id: !input 'anwesenheitstracker'
    from: 'not_home'
    to: 'home'
    
  action:
  - choose:
      # Anwesenheit
      - conditions:
          - condition: state
            entity_id: !input anwesenheitstracker
            state: "home"
        sequence:
          - choose:
              # Temperatur Zeit 1
              - conditions:
                  - condition: time
                    after: !input temperatur_zeit1
                    before: !input temperatur_zeit2
                sequence:
                  - service: climate.set_temperature
                    target:
                      entity_id: !input climate_entity_id
                    data:
                      temperature: !input temperatur_zeit1_temp
              # Temperatur Zeit 2
              - conditions:
                  - condition: time
                    after: !input temperatur_zeit2
                    before: !input temperatur_zeit3
                sequence:
                  - service: climate.set_temperature
                    target:
                      entity_id: !input climate_entity_id
                    data:
                      temperature: !input temperatur_zeit2_temp
              # Temperatur Zeit 3
              - conditions:
                  - condition: time
                    after: !input temperatur_zeit3
                    before: !input temperatur_zeit4
                sequence:
                  - service: climate.set_temperature
                    target:
                      entity_id: !input climate_entity_id
                    data:
                      temperature: !input temperatur_zeit3_temp
              # Temperatur Zeit 4
              - conditions:
                  - condition: time
                    after: !input temperatur_zeit4
                sequence:
                  - service: climate.set_temperature
                    target:
                      entity_id: !input climate_entity_id
                    data:
                      temperature: !input temperatur_zeit4_temp
          # Abwesenheit
          - sequence:
              - service: climate.set_temperature
                target:
                  entity_id: !input climate_entity_id
                data:
                  temperature: !input temperatur_abwesenheit
