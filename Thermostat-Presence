blueprint:
  name: Thermostat-Steuerung
  description: Eine Automatisierung zur Steuerung von Thermostaten
  domain: automation
  input:
    anwesenheitstracker:
      name: Anwesenheitstracker
      description: Entity-ID des Anwesenheitstrackers
      selector:
        entity:
          domain: device_tracker
    zeit1:
      name: Zeit 1
      description: Zeitpunkt, zu dem eine individuelle Temperatur gesetzt werden soll
      selector:
        time:
    temperatur1:
      name: Temperatur 1
      description: Individuelle Temperatur f端r Zeitpunkt 1
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
    zeit2:
      name: Zeit 2
      description: Zeitpunkt, zu dem eine individuelle Temperatur gesetzt werden soll
      selector:
        time:
    temperatur2:
      name: Temperatur 2
      description: Individuelle Temperatur f端r Zeitpunkt 2
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
    zeit3:
      name: Zeit 3
      description: Zeitpunkt, zu dem eine individuelle Temperatur gesetzt werden soll
      selector:
        time:
    temperatur3:
      name: Temperatur 3
      description: Individuelle Temperatur f端r Zeitpunkt 3
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
    zeit4:
      name: Zeit 4
      description: Zeitpunkt, zu dem eine individuelle Temperatur gesetzt werden soll
      selector:
        time:
    temperatur4:
      name: Temperatur 4
      description: Individuelle Temperatur f端r Zeitpunkt 4
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
    temperatur_abwesenheit:
      name: Temperatur bei Abwesenheit
      description: Temperatur, die gesetzt wird, wenn niemand zu Hause ist
      selector:
        number:
          min: 5
          max: 40
          step: 0.5
          
    automation:
  - alias: Thermostat-Steuerung
    trigger:
      platform: state
      entity_id: input_boolean.{{ states('input_boolean.anwesenheitstracker') }}
      to: 'on'
    condition:
      - condition: time
        after: 'Input_Zeit1'
        before: 'Input_Zeit2'
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.thermostat
          temperature: '{{ states('input_number.individual_temperature_1') }}'

  - alias: Thermostat-Steuerung bei Abwesenheit
    trigger:
      platform: state
      entity_id: input_boolean.{{ states('input_boolean.anwesenheitstracker') }}
      to: 'off'
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.thermostat
          temperature: '{{ states('input_number.individual_temperature_abwesenheit') }}'
   
